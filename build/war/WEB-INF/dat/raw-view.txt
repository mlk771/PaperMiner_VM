<h3>Raw Data View</h3>

<div class="pane-container">
 <table>
  <tr>
   <td>Records:
   <div id="raw-list-container"></div>
   </td>  
   <td>Record:
    <div id="raw-record-container"></div>
    <div id="csv-table-container" style="position: absolute; font-size:0pt;"></div>
    <div id="raw-ctl">
     <table id="ctl-table">
      <tr>
       <td>
        <div class="pm-button-bar">
         <button id="rdv-pb3" onClick="locnEdit(true)">Edit Locations</button>
         <button id="rdv-pb1" onClick="fixRecord()">Fix in TROVE</button>
         <button id="rdv-pb2" onClick="refreshRecord()">Refresh Record</button>
        </div>
       </td>
      </tr>
     </table>
    </div>
   </td>
  </tr>
 </table> 
 
         <!-- <button id="csv-download" onClick="csvDownload()">Download CSV</button>
<p id="downloadify"></p> --!>
 <a id="fix-url" class="hidden" href="#" target="_blank" />   
 
 <p>&nbsp;
 <div id="raw-rb-pane" align="center">
  
 <table>
	<tr>
		<td>
			Year From:
		</td>
		<td>
			<input id="rawview-year-start" type="textbox" size="4" maxlength="4" onblur="update()">
			<span>   to:</span>
			<input id="rawview-year-end" type="textbox" size="4" maxlength="4" onblur="update()">
		</td>
	</tr>
</table>

  <p>Order by:
  <input type="radio" name="raw-sort-rb" value="date" onChange="_sortRaw(1)"> Date </input>
  &nbsp; &nbsp;
  <input type="radio" name="raw-sort-rb" value="rel" onChange="_sortRaw(2)" > Relevance </input>
  &nbsp; &nbsp;
  <input type="radio" name="raw-sort-rb" value="src" onChange="_sortRaw(3)" > Source </input>
  &nbsp; &nbsp;
  <input type="radio" name="raw-sort-rb" value="trove" onChange="_sortRaw(4)" checked="true"  > Retrieve order </input>
 </div>
 
</div>
 
 
 <script type="text/javascript">

$(document).ready(function () {
	_updateViews();
});
 
function update() {
	
	var start = parseInt($('#rawview-year-start').val());
	var end = parseInt($('#rawview-year-end').val());

	_updateSlider(start, end);
	
	// refresh raw results
	showRawResults(true);
	
	// sort according to which radio button is selected
	var rbGroup = $('input[name="raw-sort-rb"]');
	for (var i = 0; i < rbGroup.length; i++ ) {
		if (rbGroup[i].checked == true) {
			_sortRaw(i + 1);
			break;
		}
	}
}

$(document).ready(function(){
//open popup
$("#citation_pop").click(function(){
  $("#citation_overlay_form").fadeIn(500);
  positionPopup();
});

//close popup
$("#close").click(function(){
    $("#citation_overlay_form").fadeOut(500);
});
});

//position the popup at the center of the page
function positionPopup(){
  if(!$("#ciation_overlay_form").is(':visible')){
    return;
  } 
  $("#citation_overlay_form").css({
      left: ($(window).width() - $('#citation_overlay_form').width()) / 2,
      top: ($(window).width() - $('#citation_overlay_form').width()) / 7,
      position:'absolute'
  });
}

//maintain the popup at center of the page when browser resized
$(window).bind('resize',positionPopup);


  /*function csvDownload() {
	  Downloadify.create('downloadify',{
	    filename: function(){
	      return document.getElementById('filename').value;
	    },
	    data: function(){ 
	      return document.getElementById('data').value;
	    },
	    onComplete: function(){ 
	      alert('Your File Has Been Saved!'); 
	    },
	    onCancel: function(){ 
	      alert('You have cancelled the saving of this file.');
	    },
	    onError: function(){ 
	      alert('You must put something in the File Contents or there will be nothing to save!'); 
	    },
	    transparent: false,
	    swf: 'media/downloadify.swf',
	    downloadImage: 'images/download.png',
	    width: 100,
	    height: 30,
	    transparent: true,
	    append: false
	  });
  
  }*/
</script>